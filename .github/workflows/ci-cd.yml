name: CI/CD

on:
  push:
    tags:
      - '*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build Docker image
        working-directory: ./
        run: docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest .

      - name: Push Docker image
        run: docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} "
            if [ \$(docker ps -aq -f name=joonhwan.org) ]; then
              docker stop joonhwan.org
              docker rm joonhwan.org
            fi
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest
            docker run -d --restart always --name joonhwan.org -p 5000:80 ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest
          "
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} "docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest && docker run -d --restart always --name joonhwan.org -p 5000:80 ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest"
          
#      - name: Deploy to VPS
#        run: |
#          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} "docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest && docker run -d --restart always --name joonhwan,.org -p 80:80 ghcr.io/${{ secrets.GHCR_USERNAME }}/joonhwan.org:latest"
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}